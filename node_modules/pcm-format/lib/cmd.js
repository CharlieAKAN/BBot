'use strict';

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _subarg = require('subarg');

var _subarg2 = _interopRequireDefault(_subarg);

var _lodashCamelcase = require('lodash.camelcase');

var _lodashCamelcase2 = _interopRequireDefault(_lodashCamelcase);

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

function format(input) {
    if (input == null) return {};

    var obj = {};
    var _arr = ['float', 'signed', 'bit-depth', 'byte-order'];
    for (var _i = 0; _i < _arr.length; _i++) {
        var k = _arr[_i];
        obj[(0, _lodashCamelcase2['default'])(k)] = input[k];
    }

    if (input['little-endian'] || input['le']) obj.byteOrder = 'LE';else if (input['big-endian'] || input['be']) obj.byteOrder = 'BE';

    return obj;
}

var argv = (0, _subarg2['default'])(process.argv.slice(2), {
    alias: {
        'in-format': 'if',
        'out-format': 'of',
        out: 'o',
        help: 'h'
    }
});

if (argv.help) {
    var str = _fs2['default'].readFileSync(_path2['default'].join(__dirname, '../usage.txt'), { encoding: 'utf-8' });
    console.log(str);
    process.exit();
}

var inStream = process.stdin;
if (argv._.length >= 1) inStream = _fs2['default'].createReadStream(argv._[0]);

var outStream = process.stdout;
if (argv.out != null) outStream = _fs2['default'].createWriteStream(argv.out);

var inFormat = format(argv['in-format']);
var outFormat = format(argv['out-format']);

inStream.pipe(new _index2['default'](inFormat, outFormat)).pipe(outStream);